name: PR Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  build-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build site
        run: npm run build
      
      - name: Upload preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-${{ github.event.pull_request.number }}-preview
          path: _site
          retention-days: 7
      
      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const owner = context.repo.owner;
            const runUrl = `https://github.com/${owner}/${repoName}/actions/runs/${context.runId}`;
            const artifactUrl = `${runUrl}#artifacts`;
            
            const comment = `## ðŸš€ PR Preview Build
            
            Your preview build is ready!
            
            **ðŸ“¦ Download Preview:** [pr-${prNumber}-preview.zip](${artifactUrl})
            
            Built from commit: [\`${context.sha.substring(0, 7)}\`](https://github.com/${owner}/${repoName}/commit/${context.sha})
            
            ### How to test locally:
            1. Download the artifact from the [workflow run](${runUrl})
            2. Extract the zip file
            3. Serve the \`_site\` directory with a local server:
               \`\`\`bash
               npx serve _site
               \`\`\`
            
            The preview artifact will be available for 7 days.
            
            ---
            
            ðŸ’¡ **Tip:** For automatic live previews, consider using [Netlify](https://www.netlify.com/) or [Vercel](https://vercel.com/) which support PR previews out of the box.`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo: repoName,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('PR Preview Build')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner,
                repo: repoName,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner,
                repo: repoName,
                issue_number: prNumber,
                body: comment
              });
            }
