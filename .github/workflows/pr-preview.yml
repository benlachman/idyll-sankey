name: PR Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  deployments: write

jobs:
  build-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build site
        run: npm run build
      
      - name: Upload preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: preview-build-${{ github.event.pull_request.number }}
          path: _site
          retention-days: 7
      
      - name: Create deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: pr-preview-${{ github.event.pull_request.number }}
          ref: ${{ github.head_ref }}
      
      - name: Deploy to GitHub Pages (PR Preview)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          publish_branch: gh-pages-preview
          destination_dir: pr-${{ github.event.pull_request.number }}
          force_orphan: false
      
      - name: Update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ github.event.pull_request.number }}/
      
      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const owner = context.repo.owner;
            const previewUrl = `https://${owner}.github.io/${repoName}/pr-${prNumber}/`;
            
            const comment = `## ðŸš€ Deploy Preview
            
            Your preview deployment is ready!
            
            **Preview URL:** ${previewUrl}
            
            Built from commit: ${context.sha.substring(0, 7)}
            
            This preview will be available for 7 days or until the PR is closed.`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo: repoName,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Deploy Preview')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner,
                repo: repoName,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner,
                repo: repoName,
                issue_number: prNumber,
                body: comment
              });
            }
